@import "../pui-variables";
@import "../mixins";

/*doc
---
title: Tabs
name: tab
categories:
  - Objects
  - All
---

<code class="pam">
<i class="fa fa-download" alt="Install the Component">
npm install pui-css-tabs --save
</i>
</code>


You can activate a tab or pill navigation without writing any JavaScript by simply specifying `data-toggle="tab"` on an element.

*/

/*doc
---
title: Highlight
name: tab_highlight
parent: tab
---

```html_example
<div class="tab-highlight">
  <div class="row">
    <div class="col-md-8">
      <h1>Service Plans</h1>
      <ul class="nav nav-stacked">
        <li class="active">
          <a data-toggle="tab" href="#home">
            <div class="row">
              <div class="col-md-10 tab-title">Spark</div>
              <div class="col-md-14">Free</div>
            </div>
          </a>
        </li>
        <li>
          <a data-toggle="tab" href="#profile">
            <div class="row">
              <div class="col-md-10 tab-title">Boost</div>
              <div class="col-md-14">$10/month</div>
            </div>
          </a>
        </li>
        <li>
          <a data-toggle="tab" href="#messages">
            <div class="row">
              <div class="col-md-10 tab-title">Amp</div>
              <div class="col-md-14">$50/month</div>
            </div>
          </a>
        </li>
        <li>
          <a data-toggle="tab" href="#settings">
            <div class="row">
              <div class="col-md-10 tab-title">
                Shockingly long plan name is important to test
              </div>
              <div class="col-md-14">$1000/month</div>
            </div>
          </a>
        </li>
      </ul>
    </div>
    <div class="col-md-16">
      <h1>Plan Features</h1>
      <div class="tab-content">
        <div class="tab-pane fade in active" id="home">Content 1</div>
        <div class="tab-pane fade" id="profile">Content 2</div>
        <div class="tab-pane fade" id="messages">Content 3</div>
        <div class="tab-pane fade" id="settings">Content 4</div>
      </div>
    </div>
  </div>
</div>
```

*/

.tab-highlight {
  .nav {
    > li {
      position: relative;
      overflow: hidden;

      + li {
        margin-top: -$tab-highlight-border-width; // overriding bootstrap defaults
      }

      > a {
        padding: 15px;
        color: $tab-highlight-tab-color;
        background-color:$tab-highlight-bg-color;
        transition: background-color 150ms ease-out;
      }

      > a:hover {
        z-index: 100;
        background-color: $tab-highlight-hover-bg-color;
      }
    }

    > li.active {
      a {
        z-index: 50;
      }

      > a,
      > a:hover {
        color: $tab-highlight-tab-active-color;
        background-color: $tab-highlight-tab-hover-bg-color;
        border-width: 0;
        cursor: default;
      }
    }

    .tab-title {
      font-size: $nav-tabs-title-font-size;
    }
  }


  //content area of tabs
  .tab-content {
    border-top: $tab-highlight-border-width solid $tab-highlight-border-color;
    padding: 0;
    margin-left: -20px;
  }
}

/*doc
---
title: Simple
name: tab_simple
parent: tab
---

```html_example
<div class="tab-simple">
  <div class="tabs-action txt-r">
    <a>Some Action</a>
  </div>
  <ul class="nav nav-tabs">
    <li class="active">
      <a data-toggle="tab" href="#spaces">Spaces</a>
    </li>
    <li>
      <a data-toggle="tab" href="#domains">Domains</a>
    </li>
    <li>
      <a data-toggle="tab" href="#members">Members</a>
    </li>
  </ul>
  <div class="tab-content">
    <div class="tab-pane fade in active" id="spaces">Spaces Content</div>
    <div class="tab-pane fade" id="domains">Domains Content</div>
    <div class="tab-pane fade" id="members">Members Content</div>
  </div>
</div>
```

*/

$tab-border-size: 3px;
.tab-simple {
  background-color: $tab-simple-tab-active-bg-color;
  position: relative;
  .nav {
    &.nav-tabs {
      border-bottom: $tab-border-size solid $tab-simple-shadow-border-color;
      border-top: 1px solid $tab-simple-tab-border-color;
      background-color: $tab-simple-bg-color;
      @include background-clip-fix;
    }

    > li {
      border-right: 1px solid $tab-simple-tab-border-color;
      > a {
        margin-right: 0; // bootstrap override
        border: 0; //bootstrap override
        border-radius: 0; //bootstrap override
        padding: 10px 19px 13px 19px;
        color: $tab-simple-link-color;
        font-weight: $tab-simple-link-font-weight;
        font-size: 16px;
      }

      > a:hover {
        border: 0;
      }
    }

    > li:hover {
      cursor: pointer;
      @include transition-pui();

      > a {
        background-color: $tab-simple-tab-hover-bg-color;
      }
    }

    > li.active {
      margin-bottom: -$tab-border-size; //Don't show the border on the active tab
      border-top: $tab-border-size solid $tab-simple-shadow-border-color;
      background-color: $tab-simple-tab-active-bg-color;
      cursor: default;
      border-right: 0;
      @include no-transition;

      > a {
        border: 0;
        margin: -$tab-border-size 0 $tab-border-size 0; //shift text up to offset top border
        color: $tab-simple-link-active-color;
        background-color: transparent;
      }
    }
  }



  .tabs-action {
    padding: 14px 16px;
    position: absolute;
    right: 0;
  }
}

.tab-pane {
  padding: 20px;
}

/*doc
---
title: Simple Alt
name: tab_simple_alt
parent: tab
---

You do not need the `.panel` to wrap around `.tab-simple-alt`. We have it there to demonstrate the interaction on a neutral background.

```html_example
<div class="panel paxl bg-neutral-9">
  <div class="tab-simple-alt">
    <ul class="nav nav-tabs">
      <li class="active">
        <a data-toggle="tab" href="#dashboard">Dashboard</a>
      </li>
      <li>
        <a data-toggle="tab" href="#notifications">Notifications</a>
      </li>
      <li>
        <a data-toggle="tab" href="#eula">EULA</a>
      </li>
    </ul>
    <div class="tab-content">
      <div class="tab-pane fade in active" id="dashboard">Dashboard Content</div>
      <div class="tab-pane fade" id="notifications">Notifications Content</div>
      <div class="tab-pane fade" id="eula">EULA Content</div>
    </div>
  </div>
</div>
```

*/

.tab-simple-alt {
  position: relative;
  .nav {
    &.nav-tabs {}
    border-bottom: none;
    > li {
      > a {
        margin-right: 0;
        border: 0;
        border-radius: 0;
        padding: 10px 19px 13px 19px;
        color: $tab-alt-link-color;
        font-weight: $tab-alt-link-font-weight;
        font-size: 16px;
      }
      > a:hover, > a:focus {
        border: 0;
      }
    }
    > li:hover {
      cursor: pointer;
      @include transition-pui;
      > a {
        background-color: $tab-alt-hover-bg-color;
      }
    }
    > li.active {
      border-top: 2px solid $tab-alt-active-highlight-color;
      background-color: $tab-alt-active-bg-color;
      cursor: default;
      border-right: 0;
      @include no-transition;
      > a {
        color: $tab-alt-link-active-color;
        background-color: transparent;
      }
    }
  }
  .tabs-action {
    padding: 14px 16px;
    position: absolute;
    right: 0;
  }
  .tab-content {
    background-color: $tab-alt-active-bg-color;
  }
}

/*doc
---
title: Responsive
name: tab_responsive
parent: tab
---

```html_example
<div class="tab-responsive">
  <div class="row">
    <div class="col-sm-5">
      <ul class="nav hidden-xs">
        <li class="active">
          <a data-toggle="tab" href="#tab-responsive-1">meep</a>
        </li>
        <li>
          <a data-toggle="tab" href="#tab-responsive-2">foo</a>
        </li>
        <li>
          <a data-toggle="tab" href="#tab-responsive-3">bar</a>
        </li>
        <li>
          <a data-toggle="tab" href="#tab-responsive-4">baz</a>
        </li>
      </ul>
    </div>

    <div class="col-sm-19">
      <ul class="tab-content">
        <li class="active">
          <a class="visible-xs-block" data-toggle="tab" href="#tab-responsive-1">meep</a>
        </li>
        <li class="tab-pane active fade in" id="tab-responsive-1">Content 1</li>
        <li>
          <a class="visible-xs-block" data-toggle="tab" href="#tab-responsive-2">foo</a>
        </li>
        <li class="tab-pane fade" id="tab-responsive-2">Content 2</li>
        <li>
          <a class="visible-xs-block" data-toggle="tab" href="#tab-responsive-3">foo</a>
        </li>
        <li class="tab-pane fade" id="tab-responsive-3">Content 3</li>
        <li>
          <a class="visible-xs-block" data-toggle="tab" href="#tab-responsive-4">foo</a>
        </li>
        <li class="tab-pane fade" id="tab-responsive-4">Content 4</li>
      </ul>
    </div>
  </div>
</div>
```

*/

.tab-responsive {
  .tab-content {
    padding-left: 0;
    list-style: none;
  }

  a[data-toggle="tab"] {
    padding: 8px 10px;
    color: $tab-responsive-color;
    margin: 5px 0;
    border-radius: $tab-responsive-radius;
    @include transition-pui();
  }

  .active a[data-toggle="tab"],
  a[data-toggle="tab"]:hover,
  a[data-toggle="tab"]:focus {
    background-color: $tab-responsive-bg;
    color: $tab-responsive-active-color;
  }

  @media (max-width: $screen-sm) {
    a[data-toggle="tab"] {
      background-color: $tab-responsive-bg;
      color: $tab-responsive-active-color;
    }

    .tab-pane {
      padding: $tab-responsive-pane-padding;
    }
  }
}



/*doc
---
title: Image
name: tab_image
parent: tab
---

You can use any 130px by 130px svg for the icon in the center of the tab. Please add the class `icon` to any parts of the svg which form part of the icon. You may also use an icon font for the icon.

```html_example
<div class="tabs-images">
  <ul class="list-inline nav-tabs-images">
    <li class="active">
      <a data-toggle="tab" href="#agility">
        <span class="sr-only">Agility</span>
        <svg class="icon-svg" x="0px" y="0px" height="130" width="130" enable-background="new 0 0 130 130" >
          <g>
            <path class="icon" d="M97.283,83.157H86.452c-2.555,3.305-5.781,6.066-9.478,8.067h20.31l4.489-3.945L97.283,83.157z"/>
            <path class="icon" d="M62.788,38.586c-14.513,0-26.319,11.807-26.319,26.319c0,5.429,1.66,10.473,4.489,14.667h11.012
              c-4.499-3.327-7.434-8.654-7.434-14.667c0-10.064,8.188-18.252,18.252-18.252S81.04,54.84,81.04,64.905
              c0,6.013-2.935,11.34-7.434,14.667c-3.032,2.242-6.766,3.585-10.818,3.585H43.853h-4.729H28.292l4.482,4.122l-4.482,3.945h20.311
              h14.185c7.43,0,14.145-3.099,18.935-8.067c1.066-1.106,2.033-2.308,2.895-3.585c2.83-4.194,4.489-9.238,4.489-14.667
              C89.107,50.393,77.301,38.586,62.788,38.586z"/>
          </g>
        </svg>
      </a>
    </li>
    <li>
      <a data-toggle="tab" href="#choice">
        <span class="sr-only">Choice</span>
        <svg class="icon-svg" version="1.1" x="0px" y="0px"
             viewBox="0 0 130 130" enable-background="new 0 0 130 130" xml:space="preserve">
          <g>
            <g>
              <path class="icon" d="M59.642,57.905c0,1.65-1.35,3-3,3h-18c-1.65,0-3-1.35-3-3v-18c0-1.65,1.35-3,3-3h18c1.65,0,3,1.35,3,3V57.905z"/>
            </g>
            <g>
              <path class="icon" d="M78.381,60.905c-1.65,0-3.675-1.169-4.5-2.598l-3.928-6.804c-0.825-1.429-0.825-3.767,0-5.196l3.928-6.804
                c0.825-1.429,2.85-2.598,4.5-2.598h7.856c1.65,0,3.675,1.169,4.5,2.598l3.928,6.804c0.825,1.429,0.825,3.767,0,5.196l-3.928,6.804
                c-0.825,1.429-2.85,2.598-4.5,2.598H78.381z"/>
            </g>
            <circle class="icon" cx="82.309" cy="79.905" r="12"/>
            <g>
              <path class="icon" d="M46.202,70.399c0.792-1.372,2.088-1.372,2.88,0l3.77,6.531c0.792,1.372,2.088,3.616,2.88,4.988l3.77,6.531
                c0.792,1.372,0.144,2.494-1.44,2.494h-7.541c-1.584,0-4.175,0-5.759,0h-7.541c-1.584,0-2.232-1.122-1.44-2.494l3.77-6.531
                c0.792-1.372,2.088-3.616,2.88-4.988L46.202,70.399z"/>
            </g>
          </g>
        </svg>
      </a>
    </li>
    <li>
      <a data-toggle="tab" href="#open-source">
        <span class="sr-only">Open Source</span>
        <svg class="icon-svg" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 130 130" enable-background="new 0 0 130 130">
          <path class="icon" d="M95.22,65.454c0-16.583-13.441-30.025-30.024-30.025c-16.583,0-30.026,13.442-30.026,30.025
            c0,12.68,7.861,23.525,18.973,27.926l7.596-19.192c-3.477-1.377-5.937-4.767-5.937-8.734c0-5.188,4.207-9.393,9.394-9.393
            c5.188,0,9.395,4.206,9.395,9.393c0,3.966-2.463,7.357-5.937,8.734l7.594,19.192C87.362,88.979,95.22,78.134,95.22,65.454z"/>
        </svg>
      </a>
    </li>
  </ul>
  <div class="tab-content txt-c">
    <div class="tab-pane fade in active" id="agility">Agility Content</div>
    <div class="tab-pane fade" id="choice">Choice Content</div>
    <div class="tab-pane fade" id="open-source">Open Source</div>
  </div>
</div>

```
*/

.tabs-images {
  .nav-tabs-images {
    text-align: center;
    li {
      a[data-toggle=tab] {
        display: inline-block;
        width: 130px;
        height: 130px;
        margin: 0 30px;
        @include button-shadow;
        background-color: $neutral-8;
        border-radius: 130px;
        transition: all 300ms ease;
        color: $neutral-5;

        .icon-svg {
          .icon {
            fill: currentColor;
          }
        }
      }
    }
  }

  .nav-tabs-images li {
    &.active a,
    &:hover a,
    &:focus a,
    &:active a{
      background-color: $teal-3;
      color: $neutral-11;
    }
  }
}

/*doc
---
title: Tabs
name: tabs_react
categories:
  - React
---

<code class="pam">
<i class="fa fa-download" alt="Install the Component">
npm install pui-react-tabs --save
</i>
</code>

Require the subcomponent:

```
var SimpleTabs = require('pui-react-tabs').SimpleTabs;
```


Using Tab components in React consists of a parent element for the desired Tab type (for example,
`SimpleTabs` or `SimpleAltTabs`). Each `Tab` is a child of this and has a `tab` property for the
string value a Tab should display. Additionally, each `Tab` must define an `eventKey` property
for uniquely identifying this tab to its parent component. When you want to indicate which
tab should be selected by default, apply the `defaultActiveKey` prop to the parent.

For examples, see the various Tabs defined below.

*/

/*doc
---
title: Simple
name: 01_simple_tabs_react
parent: tabs_react
---

```react_example
<UI.SimpleTabs defaultActiveKey={1}>
  <UI.Tab eventKey={1} tab="Tab 1">Wow!</UI.Tab>
  <UI.Tab eventKey={2} tab="Tab 2">
    <h2>Neat!</h2>
    <span>So much content.</span>
  </UI.Tab>
</UI.SimpleTabs>
```

*/

/*doc
---
title: Alt
name: 02_alt_tabs_react
parent: tabs_react
---

```react_example
<UI.SimpleAltTabs defaultActiveKey={2}>
  <UI.Tab eventKey={1} tab="Tab 1">Wow!</UI.Tab>
  <UI.Tab eventKey={2} tab="Tab 2">
    <h2>Neat!</h2>
    <span>So much content.</span>
  </UI.Tab>
</UI.SimpleAltTabs>
```

*/

/*doc
---
title: Customizing Tabs
name: 03_customizing_tabs
parent: tabs_react
---

If you want to customize the Tab component, you can use `className`, `id`, and `style`. These attributes will be applied to the `tab-pane`.

```react_example
<UI.SimpleTabs defaultActiveKey={1}>
  <UI.Tab eventKey={1} tab="Tab 1" className="bg-error-4">Wow!</UI.Tab>
  <UI.Tab eventKey={2} tab="Tab 2">Neat!</UI.Tab>
</UI.SimpleTabs>
```

*/
